{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","input","setInput","onSubmit","e","preventDefault","trim","length","x","id","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","GiftExpert","Category","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,YAEzB,EAAwBC,mBAAS,IAAjC,mBAAMC,EAAN,KAAYC,EAAZ,KAaA,OAEI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACFJ,EAAMK,OAAOC,OAAO,GAAMR,GAAY,SAAAS,GAAC,OAAMP,GAAN,mBAAeO,OACtDP,EAAMK,OAAOC,OAAO,GAAKL,EAAS,KAQlC,SACI,uBACIO,GAAG,UACHC,KAAK,OACLC,MAAQV,EACRW,SAlBO,SAACR,GAAKF,EAASE,EAAES,OAAOF,a,+BCPlCG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,yDAE2CC,UAAUH,GAFrD,sDAGMI,MAAMF,GAHZ,cAGZG,EAHY,gBAIKA,EAAUC,OAJf,uBAIVC,EAJU,EAIVA,KAEFC,EAAOD,EAAKE,KAAI,SAAAhB,GAAI,IAAD,EACrB,MAAO,CACHC,GAAGD,EAAEC,GACLgB,MAAQjB,EAAEiB,MACVR,IAAG,UAAGT,EAAEkB,cAAL,aAAG,EAAUC,iBAAiBV,QAVvB,kBAaXM,GAbW,4CAAH,sDCENK,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMR,EAAS,EAATA,IAE/B,OACI,sBAAKY,UAAU,2DAAf,UACG,qBAAKC,IAAMb,EAAMc,IAAMN,IACvB,4BAAKA,QCHHO,EAAU,SAAC,GAAkB,IAAhBjB,EAAe,EAAfA,SAEtB,ECHwB,SAAEA,GAE1B,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNW,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAW,WAEPtB,EAAQC,GACHsB,MAAM,SAAAC,GAAI,OACHH,EAAU,CACNb,KAAMgB,EACNL,SAAS,SAK3B,CAAClB,IAGImB,EDlB0BK,CAAcxB,GAAlCW,EAAb,EAAQJ,KAAaW,EAArB,EAAqBA,QAErB,OACI,qCACI,6BAAMlB,IACJkB,GAAW,aACb,qBAAKJ,UAAU,YAAf,SAGIH,EAAOF,KAAK,SAAAgB,GAAG,OACX,cAAC,EAAD,eAESA,GADAA,EAAI/B,aEbpBgC,EAAa,WAItB,MAA6BzC,mBAAS,CAAC,YAAvC,mBAAO0C,EAAP,KAAgB3C,EAAhB,KAKA,OACI,qCACI,6CACA,cAAC,EAAD,CAAaA,YAAcA,IAC3B,oDACA,6BAEQ2C,EAASlB,KAAK,SAAAhB,GAAC,OAEX,cAAC,EAAD,CAEAO,SAAaP,GADPA,Y,MCjB9BmC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fb11854e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategory})=>{\r\n\r\n    const[input,setInput] = useState('');//si no hay valor por defecto es undefined\r\n\r\n    const handleInput =(e)=>{setInput(e.target.value)}\r\n    //el preventDefault evita la recarga de la pagina\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        input.trim().length>2 && (setCategory(x => [ input,...x, ]));\r\n        input.trim().length>2 && setInput('');  \r\n        \r\n    };\r\n\r\n    //const cajaTexto = document.getElementById('pendeja').value;\r\n\r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                id=\"pendeja\"\r\n                type=\"text\"\r\n                value={ input }\r\n                onChange={handleInput}\r\n            />\r\n        </form>  \r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategory: PropTypes.func.isRequired\r\n}","export const getGif = async (category)=>{\r\n       \r\n    const url=`https://api.giphy.com/v1/gifs/search?limit=3&q=${ encodeURI(category) }&api_key=VycksLTQxMJt5Kb6HfBI7EniKsLaPSeU`;        \r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifs = data.map(x=>{\r\n        return {\r\n            id:x.id,\r\n            title : x.title,\r\n            url : x.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n\r\n    \r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({title,url}) => {  \r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__delay-1s\">\r\n           <img src={ url } alt={ title } />\r\n           <p>{ title }</p> \r\n        </div>\r\n    );\r\n    \r\n}","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n            { loading && 'loading...' }\r\n            <div className=\"card-grid\">           \r\n                    \r\n                {\r\n                images.map( img =>(\r\n                    <GifGridItem \r\n                        key={img.id}\r\n                        { ...img }\r\n                    />\r\n                ))\r\n                }\r\n                    \r\n            </div>                   \r\n        </>      \r\n    );\r\n\r\n};\r\n\r\n","import { useState,useEffect} from 'react'\r\nimport { getGif } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) =>{\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect( ()=>{\r\n\r\n        getGif( category )\r\n            .then( imgs =>                \r\n                    setState( {\r\n                        data: imgs,\r\n                        loading: false,       \r\n                        \r\n                        })                              \r\n            );\r\n\r\n    },[category]);\r\n\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GiftExpert = ()=>{\r\n\r\n    //const categories = ['Don ramon','La chilindrina','El chavo'];\r\n\r\n    const [Category,setCategory]=useState(['Phineas']);\r\n    \r\n    //const addElement = ()=>{setCategory([...Category,'putin'])}; //e; set tiene un callback\r\n    //const addElement = ()=>{setCategory(x => [...x,'putin'])};\r\n\r\n    return (\r\n        <>\r\n            <h1>Gift Expert</h1>\r\n            <AddCategory setCategory={ setCategory }/>            \r\n            <h4>Que me ves pendeja</h4>\r\n            <ol>\r\n                {\r\n                    Category.map( x => (\r\n                    \r\n                        <GifGrid \r\n                        key={ x }\r\n                        category = { x } />\r\n                    \r\n                    ))\r\n                }\r\n            </ol>           \r\n        </>    \r\n    );\r\n\r\n\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GiftExpert} from './GiftExpertApp'\nimport './index.css';\n\n\nReactDOM.render(\n  <GiftExpert/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}